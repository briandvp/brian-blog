generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]

  @@map("users")
}

model Post {
  id           String    @id @default(cuid())
  title        String
  content      String
  excerpt      String?
  category     String    @default("General")
  published    Boolean   @default(false)
  views        Int       @default(0)
  comments     Int       @default(0)
  authorId     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  commentsList Comment[]
  author       User      @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("posts")
}

model Comment {
  id        String        @id @default(cuid())
  content   String
  author    String
  email     String
  status    CommentStatus @default(PENDING)
  isReply   Boolean       @default(false)
  parentId  String?
  postId    String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  parent    Comment?      @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Comment[]     @relation("CommentReplies")
  post      Post          @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("comments")
}

enum CommentStatus {
  PENDING
  APPROVED
  REJECTED
  SPAM
}
